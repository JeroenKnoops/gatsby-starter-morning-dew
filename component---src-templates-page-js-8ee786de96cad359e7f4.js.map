{"version":3,"sources":["webpack:///./src/templates/page.js","webpack:///./src/components/Disqus.js","webpack:///./src/components/ContentHeader.js","webpack:///./src/components/Content.js"],"names":["Page","render","page","this","props","data","markdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_SEO__WEBPACK_IMPORTED_MODULE_6__","title","description","excerpt","path","slug","cover","publicURL","_components_Hero__WEBPACK_IMPORTED_MODULE_5__","heroImg","_components_Wrapper__WEBPACK_IMPORTED_MODULE_4__","_components_Content__WEBPACK_IMPORTED_MODULE_3__","content","html","date","_components_Disqus__WEBPACK_IMPORTED_MODULE_7__","React","Component","__webpack_exports__","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","disqus_react__WEBPACK_IMPORTED_MODULE_1__","disqus_react__WEBPACK_IMPORTED_MODULE_1___default","_hooks_use_site_config__WEBPACK_IMPORTED_MODULE_2__","_useSiteMetadata","useSiteMetadata","disqusShortname","disqusSiteUrl","disqusConfig","url","DiscussionEmbed","shortname","config","Header","styled","header","withConfig","displayName","componentId","colors","textLight","ContentHeader","_this$props","tags","react_default","Array","react","TagList","ContentBody","div","highlight_code_linebg","highlight_code_bg","highlight_code_oneline","white","Content","dangerouslySetInnerHTML","__html"],"mappings":"oOAUMA,4FACJC,kBACE,IAAMC,EAAOC,KAAAC,MAAAC,KAAbC,eAEA,OACEC,EAAAC,EAAAC,cAAAC,EAAA,GAAQC,SAAUR,KAAAC,MAAWO,UAC3BJ,EAAAC,EAAAC,cAAAG,EAAA,GACEC,MAAOX,cADTW,MAEEC,YAAaZ,EAFfa,QAGEC,KAAMd,cAHRe,KAIEC,MAAOhB,qBAA0BA,oBAAuBiB,YAG1DZ,EAAAC,EAAAC,cAAAW,EAAA,GACEC,QAASnB,qBAA0BA,oBADrCiB,UAEEN,MAAOX,cAAiBW,QAG1BN,EAAAC,EAAAC,cAAAa,EAAA,OACEf,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAAc,EAAA,GAASC,QAAStB,EAAlBuB,KAA6BC,KAAMxB,cAAiBwB,SAIvDxB,sBACCK,EAAAC,EAAAC,cAAAa,EAAA,OACEf,EAAAC,EAAAC,cAAAkB,EAAA,GACEV,KAAMf,cADRe,KAEEJ,MAAOX,cAAiBW,cA5BnBe,IAAMC,WAqCzBC,EAAA,UAEO,IAAMC,EAAN,+CCjDP,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,KAoBAH,EAAA,EAhBsB,SAAA1B,GAAS,IAAAmC,EACcC,cAAnCC,EADqBF,EAAAE,gBACJC,EADIH,EAAAG,cAG7B,IAAAD,EACE,YAEF,IAAME,EAAe,CACnBC,IAAG,GAAAF,EAAqBtC,EADLa,KAEnBJ,MAAOT,EAAMS,OAGf,OACEqB,EAAA1B,EAAAC,cAAC4B,EAAA7B,EAADqC,gBAAA,CAAwBC,UAAxBL,EAAoDM,OAAQJ,sGCX1DK,EAASC,IAAHC,OAAAC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,kCAEDK,IAFXC,WAuBAC,4FAjBEvD,kBAAS,IAAAwD,EACgBtD,KADhBC,MACCsB,EADD+B,EAAA/B,KACOgC,EADPD,EAAAC,KAGP,OACEC,EAAAnD,EAAAC,cAAAuC,EAAA,KACGtB,GAAQiC,EAAAnD,EAAAC,cAAA,YADXiB,GAEGkC,kBAAuBF,SAAvBE,GACCD,EAAAnD,EAAAC,cAAAoD,EAAA,cACEF,EAAAnD,EAAAC,cAAA,YADF,OAEEkD,EAAAnD,EAAAC,cAAAqD,EAAA,GAASJ,KAAMA,UAVA9B,IAAMC,WCL3BkC,EAAcd,IAAHe,IAAAb,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,4lCA2DOK,IA3DPW,sBAiEeX,IAjEfY,kBAsECZ,IAtEDa,uBAuFgBb,IAvFjCc,OA4FMC,4FACJpE,kBAAS,IAAAwD,EACyBtD,KADzBC,MACCoB,EADDiC,EAAAjC,QACUE,EADV+B,EAAA/B,KACgBgC,EADhBD,EAAAC,KAGP,OACEC,EAAAnD,EAAAC,cAAA,gBACIiD,GAADhC,IAAkBiC,EAAAnD,EAAAC,cAAA+C,EAAA,CAAe9B,KAAfA,EAA2BgC,KAAMA,IACpDC,EAAAnD,EAAAC,cAAAsD,EAAA,CAAaO,wBAAyB,CAAEC,OAAQ/C,UAPlCI,IAAMC,WAa5BC,EAAA","file":"component---src-templates-page-js-8ee786de96cad359e7f4.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Content from '../components/Content'\nimport Wrapper from '../components/Wrapper'\nimport Hero from '../components/Hero'\nimport SEO from '../components/SEO'\nimport Disqus from '../components/Disqus'\n\nclass Page extends React.Component {\n  render() {\n    const page = this.props.data.markdownRemark\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO\n          title={page.frontmatter.title}\n          description={page.excerpt}\n          path={page.frontmatter.slug}\n          cover={page.frontmatter.cover && page.frontmatter.cover.publicURL}\n        />\n\n        <Hero\n          heroImg={page.frontmatter.cover && page.frontmatter.cover.publicURL}\n          title={page.frontmatter.title}\n        />\n\n        <Wrapper>\n          <article>\n            <Content content={page.html} date={page.frontmatter.date} />\n          </article>\n        </Wrapper>\n\n        {page.frontmatter.disqus && (\n          <Wrapper>\n            <Disqus\n              slug={page.frontmatter.slug}\n              title={page.frontmatter.title}\n            />\n          </Wrapper>\n        )}\n      </Layout>\n    )\n  }\n}\n\nexport default Page\n\nexport const pageQuery = graphql`\n  query PageBySlug($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        disqus\n        cover {\n          publicURL\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Disqus from 'disqus-react'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst DisqusWrapper = props => {\n  const { disqusShortname, disqusSiteUrl } = useSiteMetadata()\n\n  if (!disqusShortname) {\n    return null\n  }\n  const disqusConfig = {\n    url: `${disqusSiteUrl}${props.slug}`,\n    title: props.title,\n  }\n\n  return (\n    <Disqus.DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />\n  )\n}\n\nexport default DisqusWrapper\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport TagList from './TagList'\nimport { colors } from '../tokens'\n\nconst Header = styled.header`\n  margin-bottom: 2rem;\n  color: ${colors.textLight};\n`\n\nclass ContentIntro extends React.Component {\n  render() {\n    const { date, tags } = this.props\n\n    return (\n      <Header>\n        {date && <time>{date}</time>}\n        {Array.isArray(tags) && tags.length > 0 && (\n          <Fragment>\n            <span> in</span>\n            <TagList tags={tags} />\n          </Fragment>\n        )}\n      </Header>\n    )\n  }\n}\n\nexport default ContentIntro\n","import React from 'react'\nimport styled from 'styled-components'\nimport ContentHeader from './ContentHeader'\nimport { colors } from '../tokens'\n\nconst ContentBody = styled.div`\n  line-height: 1.6;\n\n  & > h2 {\n    padding-top: 3rem;\n    margin-top: 3rem;\n    border-top: 1px solid #ececec;\n  }\n\n  & > h3 {\n    padding-top: 3rem;\n  }\n\n  & > p {\n    margin: 1em 0 0 0;\n  }\n\n  & a {\n    border-bottom: 1px dotted rgba(162, 162, 162, 0.8);\n\n    &:hover {\n      border-bottom-style: solid;\n    }\n\n    &.anchor,\n    &.gatsby-resp-image-link {\n      border: none;\n    }\n  }\n\n  & > blockquote {\n    box-sizing: border-box;\n    margin: 1.75em 0 1.75em -2.2em;\n    padding: 0 0 0 1.75em;\n    border-left: 0.4em solid rgba(32, 35, 42, 0.85);\n  }\n\n  & > blockquote p {\n    margin: 0.8em 0;\n    font-style: italic;\n  }\n\n  & .gatsby-highlight {\n    border-radius: 5px;\n    font-size: 15px;\n    line-height: 1.7;\n    border-radius: 10px;\n    overflow: auto;\n    tab-size: 1.5em;\n    margin: 1.5em 0em 1.5em 0;\n  }\n\n  & .gatsby-highlight > pre {\n    border: 0;\n    margin: 0;\n    padding: 1;\n  }\n\n  & .gatsby-highlight-code-line {\n    background-color: ${colors.highlight_code_linebg};\n    display: block;\n    margin-right: -1em;\n    margin-left: -1em;\n    padding-right: 1em;\n    padding-left: 0.75em;\n    border-left: 0.25em solid ${colors.highlight_code_bg};\n  }\n\n  & p > code.language-text,\n  & li > code.language-text {\n    background: ${colors.highlight_code_oneline};\n    color: #222222cc;\n    padding: 0 3px;\n    font-size: 0.94em;\n    border-radius: 0.3rem;\n  }\n\n  & table {\n    margin-top: 1em;\n    border-collapse: collapse;\n    border-radius: 0.5em;\n    overflow: hidden;\n\n    & th,\n    & td {\n      padding: 0.5em;\n      background: #e8e8e8;\n      border-bottom: 2px solid ${colors.white};\n    }\n  }\n`\n\nclass Content extends React.Component {\n  render() {\n    const { content, date, tags } = this.props\n\n    return (\n      <section>\n        {(tags || date) && <ContentHeader date={date} tags={tags} />}\n        <ContentBody dangerouslySetInnerHTML={{ __html: content }} />\n      </section>\n    )\n  }\n}\n\nexport default Content\n"],"sourceRoot":""}